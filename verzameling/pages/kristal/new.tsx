import type { NextPage } from 'next'
import { zodiac, prisma } from '@prisma/client'
import { FieldValues, SubmitErrorHandler, SubmitHandler, useForm } from 'react-hook-form'
import Head from 'next/head'

import { Header, Footer } from '@Components/basic'

export const getServerSideProps = async () => {
    const res = await fetch("http://localhost:3000/api/kristallen/zodiac/getAll")
    const data:zodiac[] = await res.json()
    return {
        props: {
            zodiacData: data
        }
    }
}
// SubmitHandler<FieldValues>
const New: NextPage = ({ zodiacData }) => {
    const { register, handleSubmit, formState: { errors } } = useForm()
    const addKristal = async (data) => {
        console.log(data)
        const res = await fetch('http://localhost:3000/api/kristallen/addOne', {
            method: 'POST',
            body: JSON.stringify(data)
        })
        console.log(await res.json)
    }

    return (
        <div>
            <Head>
                <title>New kristal</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />
            <main>
                <form onSubmit={handleSubmit(addKristal)}>
                    <div>
                        <input type="text" placeholder='Name' {...register('naam', { required: "This feeld is required" })} />
                    </div>
                        <input type="number" placeholder='Prijs' step="0.01" {...register('prijs', { required: true, valueAsNumber: true })} />
                    <div>
                        <input type="color" defaultValue='#950909' {...register('kleur', { required: true })} />
                    </div>
                    <div>
                        <input type="text" placeholder='Gewicht' {...register('gewicht', { required: true })} />
                    </div>
                    <div>
                        Trasnparant: <input type="checkbox" {...register('transperant')} />
                    </div>
                    <select {...register('zodiacId', {valueAsNumber: true})}>
                        {zodiacData.map((z) => (
                            <option key={"zodiac" + z.id} value={z.id}>
                                {z.symbol} - {z.name} - {z.gloss}
                            </option>
                        ))}
                    </select>
                    <div>
                        <input type="text" placeholder='herkomst' {...register('herkomst', {required: true})} />
                    </div>
                    <div>
                        <input type="number" step="0.01" placeholder='inhoud' {...register('inhoud', {required: true, valueAsNumber: true})} />
                    </div>
                    <div>
                        {/* <input type="file" accept='image/png, image/jpeg' {...register('foto', {required: true})} />  */}
                    </div>
                    <button type="submit">Add</button>
                </form>
            </main>
            <Footer />
        </div>
    )
}
export default New